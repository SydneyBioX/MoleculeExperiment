% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessors.R
\docType{methods}
\name{accessors}
\alias{accessors}
\alias{molecules}
\alias{boundaries}
\alias{features}
\alias{segmentIDs}
\alias{molecules<-}
\alias{boundaries<-}
\alias{molecules,MoleculeExperiment-method}
\alias{boundaries,MoleculeExperiment-method}
\alias{features,MoleculeExperiment-method}
\alias{segmentIDs,MoleculeExperiment-method}
\alias{molecules<-,MoleculeExperiment-method}
\alias{boundaries<-,MoleculeExperiment-method}
\title{Accessor functions to work with MoleculeExperiment objects}
\usage{
\S4method{molecules}{MoleculeExperiment}(object, assayName = "detected", flatten = FALSE)

\S4method{boundaries}{MoleculeExperiment}(object, assayName = NULL, flatten = FALSE)

\S4method{features}{MoleculeExperiment}(object, assayName = "detected")

\S4method{segmentIDs}{MoleculeExperiment}(object, assayName = NULL)

\S4method{molecules}{MoleculeExperiment}(object, assayName = NULL) <- value

\S4method{boundaries}{MoleculeExperiment}(object, assayName = NULL) <- value
}
\arguments{
\item{object}{The MoleculeExperiment to access.}

\item{assayName}{Character string specifying the name of the assay from
which to retrieve or set information in the slot of interest.}

\item{flatten}{Logical value specifying whether to flatten the ME list into
a data.frame or not. Defaults to FALSE.}

\item{value}{New value to be added to the slot and assay of interest.}
}
\value{
A MoleculeExperiment object slot.
}
\description{
Accessor functions to work with MoleculeExperiment objects
}
\section{getters}{

Accessor functions to get data from the MoleculeExperiment object.
These include:
\itemize{
\item molecules() to retrieve information from the molecules slot.
\item boundaries() to retrieve information from the boundaries slot.
\item features() to retrieve feature names from the molecules slot.
\item segmentIDs() to retrieve segment ids from the boundaries slot.
}
}

\section{setters}{

The \verb{molecules<-} setter accesses the molecules slot, whereas the boundaries
slot can be accessed with \verb{boundaries<-}.
}

\examples{
# get example data
repo_dir <- system.file("extdata", package = "MoleculeExperiment")
me <- readXenium(repo_dir,
                  n_samples = 2,
                  keep_cols = "essential",
                  add_boundaries = "cell")

# molecules() getter
molecules(me)
molecules(me, assayName = "detected", flatten = TRUE)

# boundaries() getter
boundaries(me, assayName = "cell")
boundaries(me, assayName = "cell", flatten = TRUE)

# features() getter
features(me)

# segmentIDs() getter
segmentIDs(me, "cell")

# setter example
# read in and standardise nucleus boundaries too
nuclei_ls <- readBoundaries(data_dir = repo_dir,
                            pattern = "nucleus_boundaries.csv",
                            n_samples = 2,
                            segment_id_col = "cell_id",
                            x_col = "vertex_x",
                            y_col = "vertex_y",
                            keep_cols = "essential",
                            boundariesAssay = "nucleus",
                            scale_factor_vector = 1)

# use `boundaries<-` setter to add nucleus boundaries to the boundaries slot
boundaries(me, "nucleus") <- nuclei_ls
me
}
