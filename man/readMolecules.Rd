% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readMolecules.R
\name{readMolecules}
\alias{readMolecules}
\title{Read and standardise the detected transcripts file/s into a
MoleculeExperiment object}
\usage{
readMolecules(
  data_dir,
  pattern = NULL,
  n_samples = NULL,
  feature_col = NULL,
  x_col = NULL,
  y_col = NULL,
  keep_cols = "essential",
  molecules_mode = NULL
)
}
\arguments{
\item{data_dir}{String specifying directory with the file/s with detected
transcripts for different runs/samples.}

\item{pattern}{Character string specifying the pattern with which to find
the transcripts files. For example, in Xenium data, the pattern would be
"transcripts.csv". In contrast, in Cosmx data, the pattern would be
"tx_file".}

\item{n_samples}{Integer specifying number of samples to be read.}

\item{feature_col}{Character string specifying the name of the column with
feature names. For example, "feature_name" in xenium transcripts.csv files.}

\item{x_col}{Character string specifying the name of the column with the x
locations of the transcripts.}

\item{y_col}{Character string specifying the name of the column with the y
locations.}

\item{keep_cols}{Vector of characters specifying the columns of interest from
the transcripts file. "essential" selects columns with gene names, x and y
locations. "all" will select all columns. Alternatively, specific colums
of interest can be selected by specifying them as characters in a vector.
Note that this personalised vector needs to contain the essential columns.}

\item{molecules_mode}{Character string specifying the name of the list in
which the transcript information is going to be stored in the molecules slot.
The default name is "raw", as we envision that a MoleculeExperiment will
usually be created with raw transcript information.}
}
\value{
A standardised detected transcripts file across different
imaging-based spatial transcriptomics technologies. This file can be used
as input for creating a MoleculeExperiment object.
}
\description{
A function to standardise transcripts.csv files across different molecule-
based ST technologies. It is technology agnostic, so it is accompanied with
wrappers for the specific technologies (e.g., see readXenium).
}
